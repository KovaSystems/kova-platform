version: '3.8'

services:
  # Frontend React Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:8080
      - REACT_APP_WS_URL=ws://localhost:8080
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - kova-network

  # Backend Rust API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - RUST_LOG=info
      - DATABASE_URL=postgresql://kova:kova@postgres:5432/kova_platform
      - REDIS_URL=redis://redis:6379
      - SOLANA_RPC_URL=https://api.mainnet-beta.solana.com
      - IPFS_API_URL=http://ipfs:5001
      - JWT_SECRET=your-secret-key
    volumes:
      - ./backend:/app
      - /app/target
    depends_on:
      - postgres
      - redis
      - ipfs
    networks:
      - kova-network

  # Simulation Engine
  simulation:
    build:
      context: ./simulation
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - RUST_LOG=info
      - GAZEBO_MASTER_URI=http://gazebo:11345
      - ROS_DOMAIN_ID=0
      - BACKEND_URL=http://backend:8080
    volumes:
      - ./simulation:/app
      - /app/target
      - ./worlds:/app/worlds
    depends_on:
      - gazebo
      - backend
    networks:
      - kova-network

  # Gazebo Simulation
  gazebo:
    image: gazebo:latest
    ports:
      - "11345:11345"
    environment:
      - GAZEBO_MASTER_URI=http://localhost:11345
    volumes:
      - ./worlds:/opt/ros/humble/share/gazebo_ros/worlds
      - ./models:/opt/ros/humble/share/gazebo_ros/models
    networks:
      - kova-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=kova_platform
      - POSTGRES_USER=kova
      - POSTGRES_PASSWORD=kova
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - kova-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - kova-network

  # IPFS Node
  ipfs:
    image: ipfs/go-ipfs:latest
    ports:
      - "4001:4001"
      - "5001:5001"
      - "8080:8080"
    environment:
      - IPFS_PROFILE=server
    volumes:
      - ipfs_data:/data/ipfs
    networks:
      - kova-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
      - simulation
    networks:
      - kova-network

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - kova-network

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - kova-network

  # Jaeger Tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - kova-network

volumes:
  postgres_data:
  redis_data:
  ipfs_data:
  prometheus_data:
  grafana_data:

networks:
  kova-network:
    driver: bridge